/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace HoloToolkit.Sharing {

public class ImageTagLocation : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ImageTagLocation(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ImageTagLocation obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ImageTagLocation() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SharingClientPINVOKE.delete_ImageTagLocation(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual int GetTagId() {
    int ret = SharingClientPINVOKE.ImageTagLocation_GetTagId(swigCPtr);
    return ret;
  }

  public virtual float GetPixelX(ImageTagLocationType locationType) {
    float ret = SharingClientPINVOKE.ImageTagLocation_GetPixelX(swigCPtr, (int)locationType);
    return ret;
  }

  public virtual float GetPixelY(ImageTagLocationType locationType) {
    float ret = SharingClientPINVOKE.ImageTagLocation_GetPixelY(swigCPtr, (int)locationType);
    return ret;
  }

  public virtual float GetModelViewMatrix(int row, int col, float F, float G, float A, float B, float C, float D) {
    float ret = SharingClientPINVOKE.ImageTagLocation_GetModelViewMatrix(swigCPtr, row, col, F, G, A, B, C, D);
    return ret;
  }

}

}
